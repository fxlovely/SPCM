#!/bin/sh -e

# FIXME: This will break the NAT firewall in its current state
# Revamp and clean up the function.
# return 0

# If original iptables config that we saved, exists...then reload it.
# Why??
if [ -f /etc/sysconfig/iptables.orig ]; then
    iptables-restore < /etc/sysconfig/iptables.orig
fi
if [ ! -f /etc/sysconfig/iptables.orig ]; then
    iptables-save > /etc/sysconfig/iptables.orig
fi

# Find line number where rules will be placed prior to REJECT in the INPUT chain.
INSERTLN=`iptables -L INPUT -n --line-numbers | grep REJECT | awk '{print $1}'`

if [ ! `iptables-save | grep -- "-j CLUSTER" | awk '{print $1}' | uniq` ]; then
    iptables -N CLUSTER
    iptables -I INPUT $INSERTLN -j CLUSTER
    iptables -I CLUSTER -p udp -s 10.1.0.0/16 -j ACCEPT
    iptables -I CLUSTER -p tcp -s 10.1.0.0/16 -j ACCEPT
    iptables -I CLUSTER -p udp -s 10.2.0.0/16 -j ACCEPT
    iptables -I CLUSTER -p tcp -s 10.2.0.0/16 -j ACCEPT
    # Temporary hack for SMRT analysis portal
    iptables -I CLUSTER -p tcp -s 129.89.0.0/16 --dport 8080 -j ACCEPT
    iptables -I CLUSTER -p tcp -s 69.131.102.7/32 --dport 8080 -j ACCEPT
    # SFS weird subnet
    iptables -I CLUSTER -p tcp -s 10.7.76.0/24 --dport 8080 -j ACCEPT
fi

# save iptables
/etc/rc.d/init.d/iptables save

