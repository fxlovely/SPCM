#!/bin/sh -e

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2015-12-19  root        Begin
##########################################################################

usage()
{
    printf "Usage: $0 \n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Function description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2015-12-23  root        Begin
##########################################################################

get_host_info()
{
    printf "Digits in hostname #? [3] "
    read host_digits
    if [ 0$host_digits = 0 ]; then
	host_digits=3
    fi
    
    # Remove leading zeros so printf doesn't interpret it as octal
    printf "First host number? "
    read first_num
    first_num=`echo $first_num | sed -E 's|^0+||'`
    printf "Last host number? "
    read last_num
    last_num=`echo $last_num | sed -E 's|^0+||'`
    return 0
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

updates_dir="/home/slurm/Compute-node-updates"

while true; do

    clear
    cat << EOM
    
			    **************************
				Cluster Admin Menu
			    **************************

1.. PXE install new nodes
2.. Synchronize compute nodes
3.. Synchronize an I/O node
4.. Install updates on login node
5.. Install updates on backup login node
6.. Install updates on I/O nodes
7.. Install updates on idle compute nodes
8.. Restart cron updates on idle compute nodes
9.. Distribute system files
Q.. Quit

EOM

    printf "Selection? "
    read selection
    clear
    case $selection in
    1)
	printf "Host name prefix? [compute-] "
	read host_prefix
	if [ 0$host_prefix = 0 ]; then
	    host_prefix='compute-'
	fi
	printf "Digits in hostname #? [3] "
	read host_digits
	if [ 0$host_digits = 0 ]; then
	    host_digits=3
	fi
	printf "Domain? [local] "
	read domain
	if [ 0$domain = 0 ]; then
	    domain='local'
	fi
	auto-pxe-node-discover $host_prefix $host_digits $domain
	;;
    2)
	# FIXME: Support other schedulers
	sinfo
	get_host_info
	printf "Answer yes to all prompts? y/[n] "
	read use_defaults
	num=$first_num
	while [ $num -le $last_num ]; do
	    node=`printf '%s%0*d' compute- $host_digits $num`
	    printf "Synchronizing $node...\n"
	    if [ 0$use_defaults = 0y ]; then
		yes '' | cluster-sync-node $node compute
	    else
		cluster-sync-node $node compute
	    fi
	    printf "Done with $node...\n"
	    num=$((num + 1))
	done
	;;
    3)
	printf "Node name? "
	read node
	printf "Use all default settings? y/[n] "
	read use_defaults
	printf "Synchronizing $node...\n"
	if [ 0$use_defaults = 0y ]; then
	    yes '' | cluster-sync-node $node io
	else
	    cluster-sync-node $node io
	fi
	printf "Done with $node...\n"
	;;
    4)
	if [ `auto-ostype` = FreeBSD ]; then
	    printf "Update and sync ports tree to all nodes? y/[n] "
	    read portsnap
	    if [ 0$portsnap = 0y ]; then
		cluster-portsnap
	    fi
	fi
	w
	printf 'Continue? y/[n] '
	read continue
	if [ 0$continue = 0y ]; then
	    auto-update-system
	fi
	;;
    5)
	cluster-update-backup-nodes
	;;
    6)
	cluster-update-io-nodes
	;;
    7)
	cat << EOM

You can update all compute nodes, or just those that have not received the
last round of updates.

EOM
	mkdir -p $updates_dir
	printf "Update all compute nodes? y/[n] "
	read update_all
	if [ 0$update_all = 0y ]; then
	    rm -f $updates_dir/updated-nodes
	fi
	slurm-update-idle-nodes $updates_dir
	;;
    8)
	clear
	cat << EOM

This will clear the updated-nodes list from the last round of cron updates.

All compute nodes will be immediately set to draining state to prevent them
from receiving any new jobs before they are updated.

Nodes will be updated one at a time shortly after they become idle.

Note: cron must be configured with an entry like the following:

    0-59/15 * * * * slurm-update-idle-nodes --yes \\
	    >> /var/log/compute-node-updates 2>&1

slurm-update-idle-nodes and scripts it depends on must be in PATH.

EOM
	printf "Proceed? y/[n] "
	read proceed
	if [ 0"$proceed" = 0y ]; then
	    rm -f $updates_dir/updated-nodes
	fi
	;;
    9)
	cat << EOM

This will distribute common system files such as

    /etc/hosts
    /etc/ssh/ssh_config
    Local plugins for cluster-adduser
    
EOM
	printf "Proceed? y/[n] "
	read proceed
	if [ 0"$proceed" = 0y ]; then
	    cluster-sync-sysfiles
	fi
	;;
    Q|q)
	exit 0
	;;
    *)
	printf "Invalid selection: '$selection'\n"
	;;
    esac
    pause
done

