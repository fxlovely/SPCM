#!/bin/sh -e

##########################################################################
#   Script description:
#       Install basic tools, run updates, and possibly reboot before
#       configuring node for cluster use.
#
#   Arguments:
#       1. Fully qualified host name
#       2. Host type
#
#   History:
#   Date        Name        Modification
#   2014-11-23  root        Begin
##########################################################################

usage()
{
    printf "Usage: $0 host.domain backup|compute|io\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 2 ]; then
    usage
fi

node=$1
short_name=${node%%.*}
ip=`awk -v hn=$node '$2 == hn { print $1 }' /etc/hosts` 

if ! echo $node | fgrep -q '.'; then
    printf "No domain name in $node.  Continue? y/[n] "
    read continue
    if [ 0$continue != 0y ]; then
	exit 1
    fi
fi

if ! awk '{ print $2 }' /etc/hosts | fgrep -q $node; then
    printf "Error: $node not found in /etc/hosts.\n"
    exit 1
fi

node_type=$2

case $node_type in
backup|compute|io)
    ;;
*)
    usage
esac

# Hack to get around missing feature in PXE installer
# Should be fixed now: Was apparently a dhcp.conf configuration problem on
# login.mortimer
# gateway=$2

printf "Remove $node from all known_hosts files? [y]/n "
read remove
if [ 0$remove != 0n ]; then
    cluster-remove-from-known-hosts $node
fi

# Disable prompt for first ssh
auto-disable-host-key-prompt $short_name $node $ip

# FIXME: Run ntpdate

case `auto-ostype` in
RHEL)
    scp /etc/hosts ${node}:/etc

    # FIXME: Should this be handled by DHCP?
    ssh $node hostname $node
    ssh $node \
	"sed -i -e 's|HOSTNAME=.*|HOSTNAME=$node|' /etc/sysconfig/network"
    
    # ssh $node 'if ! fgrep GATEWAY /etc/sysconfig/network; then echo "GATEWAY='$gateway'" >> /etc/sysconfig/network; fi; service network restart'
    
    printf "Installing basic tools...\n"
    ssh $node yum install -y gcc gcc-c++ gcc-gfortran
    
    cat << EOM

If all of your nodes run the same OS, you can use rsync to distribute 
/usr/pkg* from the head node.  If they run different systems, /usr/pkg*
should be maintained separatedly.

EOM
    scp /usr/pkg/sbin/auto-binary-pkgsrc-setup \
	/usr/pkg/sbin/auto-os-release ${node}:
    ssh $node 'env PATH=${PATH}:. auto-binary-pkgsrc-setup /usr/pkg auto'
    ssh $node 'ln -sf /usr/pkg/etc/pkgsrc.* /etc/profile.d'
    # Work around git dep for missing older tcl
    ssh $node 'pkgin install -y tcl'
    ssh $node 'pkgin install -y nbpatch python27 subversion git cvs mozilla-rootcerts'
    ssh -t $node 'cd /usr/pkgsrc && svn co --non-interactive --trust-server-cert-failures=unknown-ca https://github.com/outpaddling/uwm-pkgsrc-wip/trunk uwm-pkgsrc-wip'
    ssh $node 'cd /usr/pkgsrc/uwm-pkgsrc-wip/cluster-admin-devel && bmake install'
    
    # ssh $node hostname $node
    # ssh $node \
    #    "sed -i -e 's|HOSTNAME=.*|HOSTNAME=$node|' /etc/sysconfig/network"
    ssh $node auto-set-hostname $node
    # ssh $node 'if ! fgrep GATEWAY /etc/sysconfig/network; then echo "GATEWAY='$gateway'" >> /etc/sysconfig/network; fi; service network restart'
    
    conf_dir='/usr/local/cluster'
    ssh $node "mkdir -p $conf_dir && touch $conf_dir/init-done"

    printf "Installing yum updates...\n"
    ssh $node auto-update-system --defaults
    ;;

FreeBSD)
    PORTSDIR=${PORTSDIR:-/usr/ports}
    scp /etc/hosts ${node}:/etc
    
    # FIXME: Should this be handled by DHCP?
    ssh $node hostname $node
    ssh $node \
	"sed -i '' -e 's|hostname=.*|hostname="$node"|' /etc/rc.conf"
    
    # ssh $node 'if ! fgrep GATEWAY /etc/sysconfig/network; then echo "GATEWAY='$gateway'" >> /etc/sysconfig/network; fi; service network restart'
    
    printf "Installing basic tools...\n"
    repo_dir=/usr/local/etc/pkg/repos
    if [ -e $repo_dir ]; then
	printf "Installing $repo_dir...\n"
	scp -rp $repo_dir ${node}:/usr/local/etc
    fi

    # FIXME: Add cluster-admin
    ssh -t $node env ASSUME_ALWAYS_YES=yes \
	pkg upgrade -y
    ssh -t $node env ASSUME_ALWAYS_YES=yes \
	pkg install -y subversion rsync ca_root_nss-3.39
    
    printf "Syncing ports...\n"
    rsync -a --delete /usr/ports ${node}:/usr
    ssh $node 'fetch https://github.com//outpaddling/freebsd-ports-wip/raw/master/freebsd-wip-checkout'
    ssh $node sh ./freebsd-wip-checkout svn
    ssh $node 'cd /usr/ports/wip/cluster-admin-devel && make deinstall clean reinstall clean'
    
    # Pull ssh keys from node
    # FIXME: Should not be needed and security risk if compute nodes
    # behind on updates can access login node
    # auto-ssh-reverse-authorize $node
    
    conf_dir='/usr/local/cluster'
    ssh $node "mkdir -p $conf_dir && touch $conf_dir/init-done"

    printf "Installing updates...\n"
    ssh $node auto-update-system --binary
    ;;

*)
    printf "Not yet implemented for `auto-ostype`.\n" >> /dev/stderr
    ;;
esac

printf "Reboot? [y]/n "
read reboot
if [ 0$reboot != 0n ]; then
    ssh $node shutdown -r now
fi
