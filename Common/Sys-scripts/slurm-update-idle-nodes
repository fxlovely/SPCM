#!/bin/sh -e

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-11-05  root        Begin
##########################################################################

usage()
{
    printf "Usage: $0 slurm-partition submit-directory\n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Main
##########################################################################

if [ $# != 2 ]; then
    usage
fi

part="$1"
dir="$2"
readonly updated_nodes="$dir/updated-nodes"
if [ ! -e $updated_nodes ]; then
    touch $updated_nodes
fi

cd "$dir"
sinfo -o '%n %T'
wc $updated_nodes
updated=0

if [ `squeue | awk '$5 == "S"' | wc -l` != 0 ]; then
    printf "There are suspended jobs.  It is not safe to run updates.\n"
    exit 1
fi

echo $part

# All nodes in this partition
nodes=`sinfo --partition=$part -o %n -h`
for node in $nodes; do
    # Update node if it's not in the updated list
    if ! fgrep -q $node $updated_nodes; then
	state=`sinfo -n $node -o %T -h`
	case $state in
	idle|drained)
	    printf "Updating $node...\n"
	    # Submit job before resuming node to prevent race with user jobs
	    sbatch --partition=$part --nodelist=$node /usr/pkg-1/share/cluster-admin/sys-update.sbatch
	    if [ $state = drained ]; then
		scontrol update nodename=$node state=resume
	    fi
	    printf "Waiting for job to complete...\n"
	    while [ ! -e update-done ]; do
		sleep 2
		printf '.'
	    done
	    printf '\n'
	    rm -f update-done
	    echo $node >> $updated_nodes
	    ;;
	*)
	    # If the noe is busy, drain it so it can be updated ASAP
	    printf "$node is busy (state = $state)\n"
	    scontrol update nodename=$node state=drain reason=Upgrading
	    printf "Draining $node...\n"
	    ;;
	esac
    fi
done
wc updated-nodes

