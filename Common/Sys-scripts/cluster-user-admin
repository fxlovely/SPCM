#!/bin/sh

##########################################################################
#   Script description:
#       
#   Arguments:
#       
#   Returns:
#       
#   History:
#   Date        Name        Modification
#   2014-01-08  root        Begin
##########################################################################

usage()
{
    printf "Usage: $0 \n"
    exit 1
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}

##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

while true; do

    clear
    cat << EOM
    
			    **************************
			      Cluster User Management
			    **************************
				
1.. Add user
2.. Change user's password
3.. Sync a user's password
4.. Change user's password expiration date (to days after today)
5.. Change password expiration date for all users (to days after today)
6.. Add group
7.. Add user to another group
Q.. Quit

EOM

    printf "Selection? "
    read selection
    clear
    case $selection in
    1)
	cluster-adduser
	;;
    2)
	printf "Username? "
	read user_name
	cluster-passwd $user_name
	;;
    3)
	printf "Username? "
	read user_name
	cluster-sync-pw $user_name
	;;
    4)
	printf "Note: This will reset the expiration date on the current password\n"
	printf "regardless of age.  Choose the number of days accordingly.\n"
	printf "\nAre you sure you want to proceed? y/[n] "
	read proceed
	if [ 0$proceed = 0y ]; then
	    printf "Username? "
	    read user_name
	    printf "Expire passwords in how many days? "
	    read days
	    cluster-passwd-user-expiration $user_name $days
	fi
	;;
    5)
	printf "This will reset password expiration date for ALL users.\n"
	printf "Some users may have special expiration periods, which will be overwritten.\n"
	printf "You may prefer to set the default password age limit.\n"
	printf "See login.conf on FreeBSD or login.defs on Linux.\n"
	printf "\nAre you sure you want to proceed? y/[n] "
	read proceed
	if [ 0$proceed = 0y ]; then
	    printf "Expire password in how many days? "
	    read days
	    cluster-passwd-expiration $days
	fi
	;;
    6)
	printf "New group name? "
	read group
	printf "GID? "
	read gid
	cluster-groupadd $group -g $gid
	;;
    7)
	printf "Username? "
	read user_name
	printf "Group name? "
	read group_name
	cluster-add-to-group $user_name $group_name
	;;
    Q|q)
	exit 0
	;;
    esac
    pause
done

